#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.6 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	// edu.umd.cs.piccolo.util.PStack
	c959 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./util/PStack.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PStack </td></tr>
			<tr><td><font point-size="7.0"> edu.umd.cs.piccolo.util </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + push() </td></tr>
			<tr><td align="left"> + peek() </td></tr>
			<tr><td align="left"> + pop() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.util.PBounds
	c964 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./util/PBounds.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PBounds </td></tr>
			<tr><td><font point-size="7.0"> edu.umd.cs.piccolo.util </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + clone() </td></tr>
			<tr><td align="left"> + isEmpty() </td></tr>
			<tr><td align="left"> + reset() </td></tr>
			<tr><td align="left"> + resetToZero() </td></tr>
			<tr><td align="left"> + setRect() </td></tr>
			<tr><td align="left"> + setRect() </td></tr>
			<tr><td align="left"> + setRect() </td></tr>
			<tr><td align="left"> + add() </td></tr>
			<tr><td align="left"> + add() </td></tr>
			<tr><td align="left"> + add() </td></tr>
			<tr><td align="left"> + getOrigin() </td></tr>
			<tr><td align="left"> + setOrigin() </td></tr>
			<tr><td align="left"> + getSize() </td></tr>
			<tr><td align="left"> + setSize() </td></tr>
			<tr><td align="left"> + getCenter2D() </td></tr>
			<tr><td align="left"> + moveBy() </td></tr>
			<tr><td align="left"> + expandNearestIntegerDimensions() </td></tr>
			<tr><td align="left"> + inset() </td></tr>
			<tr><td align="left"> + deltaRequiredToCenter() </td></tr>
			<tr><td align="left"> + deltaRequiredToContain() </td></tr>
			<tr><td align="left"> + toString() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.PCamera
	c969 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PCamera.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PCamera </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + getComponent() </td></tr>
			<tr><td align="left"> + setComponent() </td></tr>
			<tr><td align="left"> + repaintFrom() </td></tr>
			<tr><td align="left"> + repaintFromLayer() </td></tr>
			<tr><td align="left"> + getLayersReference() </td></tr>
			<tr><td align="left"> + getLayerCount() </td></tr>
			<tr><td align="left"> + getLayer() </td></tr>
			<tr><td align="left"> + indexOfLayer() </td></tr>
			<tr><td align="left"> + addLayer() </td></tr>
			<tr><td align="left"> + addLayer() </td></tr>
			<tr><td align="left"> + removeLayer() </td></tr>
			<tr><td align="left"> + removeLayer() </td></tr>
			<tr><td align="left"> + getUnionOfLayerFullBounds() </td></tr>
			<tr><td align="left"> # paint() </td></tr>
			<tr><td align="left"> # paintCameraView() </td></tr>
			<tr><td align="left"> # paintDebugInfo() </td></tr>
			<tr><td align="left"> + fullPaint() </td></tr>
			<tr><td align="left"> + pick() </td></tr>
			<tr><td align="left"> # pickAfterChildren() </td></tr>
			<tr><td align="left"> # pickCameraView() </td></tr>
			<tr><td align="left"> + getViewBounds() </td></tr>
			<tr><td align="left"> + setViewBounds() </td></tr>
			<tr><td align="left"> + getViewScale() </td></tr>
			<tr><td align="left"> + scaleView() </td></tr>
			<tr><td align="left"> + scaleViewAboutPoint() </td></tr>
			<tr><td align="left"> + setViewScale() </td></tr>
			<tr><td align="left"> + translateView() </td></tr>
			<tr><td align="left"> + setViewOffset() </td></tr>
			<tr><td align="left"> + getViewTransform() </td></tr>
			<tr><td align="left"> + getViewTransformReference() </td></tr>
			<tr><td align="left"> + setViewTransform() </td></tr>
			<tr><td align="left"> + animateViewToCenterBounds() </td></tr>
			<tr><td align="left"> + animateViewToPanToBounds() </td></tr>
			<tr><td align="left"> + animateViewToIncludeBounds() </td></tr>
			<tr><td align="left"> + animateViewToTransform() </td></tr>
			<tr><td align="left"> + getViewConstraint() </td></tr>
			<tr><td align="left"> + setViewConstraint() </td></tr>
			<tr><td align="left"> # applyViewConstraints() </td></tr>
			<tr><td align="left"> + viewToLocal() </td></tr>
			<tr><td align="left"> + viewToLocal() </td></tr>
			<tr><td align="left"> + viewToLocal() </td></tr>
			<tr><td align="left"> + localToView() </td></tr>
			<tr><td align="left"> + localToView() </td></tr>
			<tr><td align="left"> + localToView() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.PComponent
	c975 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PComponent.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> &laquo;interface&raquo; </td></tr>
			<tr><td> PComponent </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + repaint() </td></tr>
			<tr><td align="left"> + paintImmediately() </td></tr>
			<tr><td align="left"> + pushCursor() </td></tr>
			<tr><td align="left"> + popCursor() </td></tr>
			<tr><td align="left"> + setInteracting() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.PCanvas
	c977 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./PCanvas.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PCanvas </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> # createDefaultCamera() </td></tr>
			<tr><td align="left"> + getPanEventHandler() </td></tr>
			<tr><td align="left"> + setPanEventHandler() </td></tr>
			<tr><td align="left"> + getZoomEventHandler() </td></tr>
			<tr><td align="left"> + setZoomEventHandler() </td></tr>
			<tr><td align="left"> + getCamera() </td></tr>
			<tr><td align="left"> + setCamera() </td></tr>
			<tr><td align="left"> + getRoot() </td></tr>
			<tr><td align="left"> + getLayer() </td></tr>
			<tr><td align="left"> + addInputEventListener() </td></tr>
			<tr><td align="left"> + removeInputEventListener() </td></tr>
			<tr><td align="left"> + getInteracting() </td></tr>
			<tr><td align="left"> + getAnimating() </td></tr>
			<tr><td align="left"> + setInteracting() </td></tr>
			<tr><td align="left"> + setDefaultRenderQuality() </td></tr>
			<tr><td align="left"> + setAnimatingRenderQuality() </td></tr>
			<tr><td align="left"> + setInteractingRenderQuality() </td></tr>
			<tr><td align="left"> + pushCursor() </td></tr>
			<tr><td align="left"> + popCursor() </td></tr>
			<tr><td align="left"> + setEnabled() </td></tr>
			<tr><td align="left"> # installInputSources() </td></tr>
			<tr><td align="left"> # removeInputSources() </td></tr>
			<tr><td align="left"> # sendInputEventToInputManager() </td></tr>
			<tr><td align="left"> + setBounds() </td></tr>
			<tr><td align="left"> + repaint() </td></tr>
			<tr><td align="left"> + paintComponent() </td></tr>
			<tr><td align="left"> + paintImmediately() </td></tr>
			<tr><td align="left"> + createTimer() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.event.PPanEventHandler
	c980 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./event/PPanEventHandler.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PPanEventHandler </td></tr>
			<tr><td><font point-size="7.0"> edu.umd.cs.piccolo.event </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> # drag() </td></tr>
			<tr><td align="left"> # pan() </td></tr>
			<tr><td align="left"> + setAutopan() </td></tr>
			<tr><td align="left"> + getAutopan() </td></tr>
			<tr><td align="left"> + setMinAutopanSpeed() </td></tr>
			<tr><td align="left"> + setMaxAutopanSpeed() </td></tr>
			<tr><td align="left"> # dragActivityStep() </td></tr>
			<tr><td align="left"> # validatePanningSpeed() </td></tr>
			<tr><td align="left"> # paramString() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.event.PZoomEventHandler
	c981 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./event/PZoomEventHandler.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PZoomEventHandler </td></tr>
			<tr><td><font point-size="7.0"> edu.umd.cs.piccolo.event </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + getMinScale() </td></tr>
			<tr><td align="left"> + setMinScale() </td></tr>
			<tr><td align="left"> + getMaxScale() </td></tr>
			<tr><td align="left"> + setMaxScale() </td></tr>
			<tr><td align="left"> # dragActivityFirstStep() </td></tr>
			<tr><td align="left"> # dragActivityStep() </td></tr>
			<tr><td align="left"> # paramString() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.event.PInputEventListener
	c984 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./event/PInputEventListener.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> &laquo;interface&raquo; </td></tr>
			<tr><td> PInputEventListener </td></tr>
			<tr><td><font point-size="7.0"> edu.umd.cs.piccolo.event </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + processEvent() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//edu.umd.cs.piccolo.PCanvas implements edu.umd.cs.piccolo.PComponent
	c975:p -> c977:p [dir=back,arrowtail=empty,style=dashed];
	// edu.umd.cs.piccolo.PCamera NAVASSOC edu.umd.cs.piccolo.PComponent
	c969:p -> c975:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// edu.umd.cs.piccolo.PCanvas NAVASSOC edu.umd.cs.piccolo.PCamera
	c977:p -> c969:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// edu.umd.cs.piccolo.PCanvas NAVASSOC edu.umd.cs.piccolo.util.PStack
	c977:p -> c959:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// edu.umd.cs.piccolo.PCanvas NAVASSOC edu.umd.cs.piccolo.event.PPanEventHandler
	c977:p -> c980:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// edu.umd.cs.piccolo.PCanvas NAVASSOC edu.umd.cs.piccolo.event.PZoomEventHandler
	c977:p -> c981:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// edu.umd.cs.piccolo.PCamera DEPEND edu.umd.cs.piccolo.util.PBounds
	c969:p -> c964:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// edu.umd.cs.piccolo.PComponent DEPEND edu.umd.cs.piccolo.util.PBounds
	c975:p -> c964:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// edu.umd.cs.piccolo.PCanvas DEPEND edu.umd.cs.piccolo.event.PZoomEventHandler
	c977:p -> c981:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// edu.umd.cs.piccolo.PCanvas DEPEND edu.umd.cs.piccolo.util.PBounds
	c977:p -> c964:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// edu.umd.cs.piccolo.PCanvas DEPEND edu.umd.cs.piccolo.event.PPanEventHandler
	c977:p -> c980:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// edu.umd.cs.piccolo.PCanvas DEPEND edu.umd.cs.piccolo.event.PInputEventListener
	c977:p -> c984:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
}

