#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.6 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	// edu.umd.cs.piccolo.PRoot
	c1618 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../PRoot.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PRoot </td></tr>
			<tr><td><font point-size="7.0"> edu.umd.cs.piccolo </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + addActivity() </td></tr>
			<tr><td align="left"> + getActivityScheduler() </td></tr>
			<tr><td align="left"> + waitForActivities() </td></tr>
			<tr><td align="left"> + getRoot() </td></tr>
			<tr><td align="left"> + getDefaultInputManager() </td></tr>
			<tr><td align="left"> + addInputSource() </td></tr>
			<tr><td align="left"> + removeInputSource() </td></tr>
			<tr><td align="left"> + createTimer() </td></tr>
			<tr><td align="left"> + getGlobalTime() </td></tr>
			<tr><td align="left"> + processInputs() </td></tr>
			<tr><td align="left"> + setFullBoundsInvalid() </td></tr>
			<tr><td align="left"> + setChildBoundsInvalid() </td></tr>
			<tr><td align="left"> + setPaintInvalid() </td></tr>
			<tr><td align="left"> + setChildPaintInvalid() </td></tr>
			<tr><td align="left"> + scheduleProcessInputsIfNeeded() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.activities.PActivityScheduler
	c1640 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./PActivityScheduler.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PActivityScheduler </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + getRoot() </td></tr>
			<tr><td align="left"> + addActivity() </td></tr>
			<tr><td align="left"> + addActivity() </td></tr>
			<tr><td align="left"> + removeActivity() </td></tr>
			<tr><td align="left"> + removeAllActivities() </td></tr>
			<tr><td align="left"> + getActivitiesReference() </td></tr>
			<tr><td align="left"> + processActivities() </td></tr>
			<tr><td align="left"> + getAnimating() </td></tr>
			<tr><td align="left"> # startActivityTimer() </td></tr>
			<tr><td align="left"> # stopActivityTimer() </td></tr>
			<tr><td align="left"> # getActivityTimer() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.activities.PActivity
	c1641 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PActivity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PActivity </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + getStartTime() </td></tr>
			<tr><td align="left"> + setStartTime() </td></tr>
			<tr><td align="left"> + getStepRate() </td></tr>
			<tr><td align="left"> + setStepRate() </td></tr>
			<tr><td align="left"> + getNextStepTime() </td></tr>
			<tr><td align="left"> + getDuration() </td></tr>
			<tr><td align="left"> + setDuration() </td></tr>
			<tr><td align="left"> + getActivityScheduler() </td></tr>
			<tr><td align="left"> + setActivityScheduler() </td></tr>
			<tr><td align="left"> + isStepping() </td></tr>
			<tr><td align="left"> # isAnimation() </td></tr>
			<tr><td align="left"> # activityStarted() </td></tr>
			<tr><td align="left"> # activityStep() </td></tr>
			<tr><td align="left"> # activityFinished() </td></tr>
			<tr><td align="left"> + getDelegate() </td></tr>
			<tr><td align="left"> + setDelegate() </td></tr>
			<tr><td align="left"> + startAfter() </td></tr>
			<tr><td align="left"> + terminate() </td></tr>
			<tr><td align="left"> + terminate() </td></tr>
			<tr><td align="left"> + processStep() </td></tr>
			<tr><td align="left"> + getStopTime() </td></tr>
			<tr><td align="left"> + toString() </td></tr>
			<tr><td align="left"> # paramString() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.PRoot NAVASSOC edu.umd.cs.piccolo.activities.PActivityScheduler
	c1618:p -> c1640:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// edu.umd.cs.piccolo.activities.PActivityScheduler NAVASSOC edu.umd.cs.piccolo.PRoot
	c1640:p -> c1618:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// edu.umd.cs.piccolo.activities.PActivity NAVASSOC edu.umd.cs.piccolo.activities.PActivityScheduler
	c1641:p -> c1640:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// edu.umd.cs.piccolo.PRoot DEPEND edu.umd.cs.piccolo.activities.PActivity
	c1618:p -> c1641:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// edu.umd.cs.piccolo.PRoot DEPEND edu.umd.cs.piccolo.activities.PActivityScheduler
	c1618:p -> c1640:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// edu.umd.cs.piccolo.activities.PActivityScheduler DEPEND edu.umd.cs.piccolo.PRoot
	c1640:p -> c1618:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
}

