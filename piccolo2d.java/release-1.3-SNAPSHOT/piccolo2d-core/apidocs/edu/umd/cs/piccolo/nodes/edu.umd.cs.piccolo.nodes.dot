#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.6 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	// edu.umd.cs.piccolo.nodes.PText
	c141 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PText.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PText </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + getJustification() </td></tr>
			<tr><td align="left"> + setJustification() </td></tr>
			<tr><td align="left"> + getTextPaint() </td></tr>
			<tr><td align="left"> + setTextPaint() </td></tr>
			<tr><td align="left"> + isConstrainWidthToTextWidth() </td></tr>
			<tr><td align="left"> + setConstrainWidthToTextWidth() </td></tr>
			<tr><td align="left"> + isConstrainHeightToTextHeight() </td></tr>
			<tr><td align="left"> + setConstrainHeightToTextHeight() </td></tr>
			<tr><td align="left"> + getGreekThreshold() </td></tr>
			<tr><td align="left"> + setGreekThreshold() </td></tr>
			<tr><td align="left"> + getText() </td></tr>
			<tr><td align="left"> + setText() </td></tr>
			<tr><td align="left"> + getFont() </td></tr>
			<tr><td align="left"> + setFont() </td></tr>
			<tr><td align="left"> + recomputeLayout() </td></tr>
			<tr><td align="left"> # computeNextLayout() </td></tr>
			<tr><td align="left"> # paint() </td></tr>
			<tr><td align="left"> # internalUpdateBounds() </td></tr>
			<tr><td align="left"> # paramString() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.nodes.PImage
	c142 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PImage.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PImage </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + getImage() </td></tr>
			<tr><td align="left"> + setImage() </td></tr>
			<tr><td align="left"> + setImage() </td></tr>
			<tr><td align="left"> # paint() </td></tr>
			<tr><td align="left"> + toBufferedImage() </td></tr>
			<tr><td align="left"> # paramString() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.nodes.PPath
	c143 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PPath.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PPath </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + createRectangle() </td></tr>
			<tr><td align="left"> + createRoundRectangle() </td></tr>
			<tr><td align="left"> + createEllipse() </td></tr>
			<tr><td align="left"> + createLine() </td></tr>
			<tr><td align="left"> + createPolyline() </td></tr>
			<tr><td align="left"> + createPolyline() </td></tr>
			<tr><td align="left"> + getStrokePaint() </td></tr>
			<tr><td align="left"> + setStrokePaint() </td></tr>
			<tr><td align="left"> + getStroke() </td></tr>
			<tr><td align="left"> + setStroke() </td></tr>
			<tr><td align="left"> + startResizeBounds() </td></tr>
			<tr><td align="left"> + endResizeBounds() </td></tr>
			<tr><td align="left"> # internalUpdateBounds() </td></tr>
			<tr><td align="left"> + intersects() </td></tr>
			<tr><td align="left"> + getPathBoundsWithStroke() </td></tr>
			<tr><td align="left"> + updateBoundsFromPath() </td></tr>
			<tr><td align="left"> # paint() </td></tr>
			<tr><td align="left"> + getPathReference() </td></tr>
			<tr><td align="left"> + moveTo() </td></tr>
			<tr><td align="left"> + lineTo() </td></tr>
			<tr><td align="left"> + quadTo() </td></tr>
			<tr><td align="left"> + curveTo() </td></tr>
			<tr><td align="left"> + append() </td></tr>
			<tr><td align="left"> + setPathTo() </td></tr>
			<tr><td align="left"> + setPathToRectangle() </td></tr>
			<tr><td align="left"> + setPathToEllipse() </td></tr>
			<tr><td align="left"> + setPathToPolyline() </td></tr>
			<tr><td align="left"> + setPathToPolyline() </td></tr>
			<tr><td align="left"> + closePath() </td></tr>
			<tr><td align="left"> + reset() </td></tr>
			<tr><td align="left"> # paramString() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
}

