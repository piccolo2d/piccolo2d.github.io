#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.6 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	// edu.umd.cs.piccolo.activities.PInterpolatingActivity
	c182 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PInterpolatingActivity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PInterpolatingActivity </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + setDuration() </td></tr>
			<tr><td align="left"> + getMode() </td></tr>
			<tr><td align="left"> + setMode() </td></tr>
			<tr><td align="left"> + getLoopCount() </td></tr>
			<tr><td align="left"> + setLoopCount() </td></tr>
			<tr><td align="left"> + getFirstLoop() </td></tr>
			<tr><td align="left"> + setFirstLoop() </td></tr>
			<tr><td align="left"> + getSlowInSlowOut() </td></tr>
			<tr><td align="left"> + setSlowInSlowOut() </td></tr>
			<tr><td align="left"> # activityStarted() </td></tr>
			<tr><td align="left"> # activityStep() </td></tr>
			<tr><td align="left"> # activityFinished() </td></tr>
			<tr><td align="left"> + terminate() </td></tr>
			<tr><td align="left"> + setRelativeTargetValue() </td></tr>
			<tr><td align="left"> + computeSlowInSlowOut() </td></tr>
			<tr><td align="left"> # setRelativeTargetValueAdjustingForMode() </td></tr>
			<tr><td align="left"> # paramString() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.activities.PColorActivity
	c183 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PColorActivity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PColorActivity </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> # isAnimation() </td></tr>
			<tr><td align="left"> + getDestinationColor() </td></tr>
			<tr><td align="left"> + setDestinationColor() </td></tr>
			<tr><td align="left"> # activityStarted() </td></tr>
			<tr><td align="left"> + setRelativeTargetValue() </td></tr>
			<tr><td align="left"> # paramString() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.activities.PColorActivity.Target
	c184 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PColorActivity.Target.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> &laquo;interface&raquo; </td></tr>
			<tr><td> Target </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + setColor() </td></tr>
			<tr><td align="left"> + getColor() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.activities.PTransformActivity
	c185 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PTransformActivity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PTransformActivity </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> # isAnimation() </td></tr>
			<tr><td align="left"> + getDestinationTransform() </td></tr>
			<tr><td align="left"> + setDestinationTransform() </td></tr>
			<tr><td align="left"> # activityStarted() </td></tr>
			<tr><td align="left"> + setRelativeTargetValue() </td></tr>
			<tr><td align="left"> # paramString() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.activities.PTransformActivity.Target
	c186 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PTransformActivity.Target.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> &laquo;interface&raquo; </td></tr>
			<tr><td> Target </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + setTransform() </td></tr>
			<tr><td align="left"> + getSourceMatrix() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.activities.PActivityScheduler
	c187 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PActivityScheduler.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PActivityScheduler </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + getRoot() </td></tr>
			<tr><td align="left"> + addActivity() </td></tr>
			<tr><td align="left"> + addActivity() </td></tr>
			<tr><td align="left"> + removeActivity() </td></tr>
			<tr><td align="left"> + removeAllActivities() </td></tr>
			<tr><td align="left"> + getActivitiesReference() </td></tr>
			<tr><td align="left"> + processActivities() </td></tr>
			<tr><td align="left"> + getAnimating() </td></tr>
			<tr><td align="left"> # startActivityTimer() </td></tr>
			<tr><td align="left"> # stopActivityTimer() </td></tr>
			<tr><td align="left"> # getActivityTimer() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.activities.PActivity
	c188 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PActivity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PActivity </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + getStartTime() </td></tr>
			<tr><td align="left"> + setStartTime() </td></tr>
			<tr><td align="left"> + getStepRate() </td></tr>
			<tr><td align="left"> + setStepRate() </td></tr>
			<tr><td align="left"> + getNextStepTime() </td></tr>
			<tr><td align="left"> + getDuration() </td></tr>
			<tr><td align="left"> + setDuration() </td></tr>
			<tr><td align="left"> + getActivityScheduler() </td></tr>
			<tr><td align="left"> + setActivityScheduler() </td></tr>
			<tr><td align="left"> + isStepping() </td></tr>
			<tr><td align="left"> # isAnimation() </td></tr>
			<tr><td align="left"> # activityStarted() </td></tr>
			<tr><td align="left"> # activityStep() </td></tr>
			<tr><td align="left"> # activityFinished() </td></tr>
			<tr><td align="left"> + getDelegate() </td></tr>
			<tr><td align="left"> + setDelegate() </td></tr>
			<tr><td align="left"> + startAfter() </td></tr>
			<tr><td align="left"> + terminate() </td></tr>
			<tr><td align="left"> + terminate() </td></tr>
			<tr><td align="left"> + processStep() </td></tr>
			<tr><td align="left"> + getStopTime() </td></tr>
			<tr><td align="left"> + toString() </td></tr>
			<tr><td align="left"> # paramString() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.activities.PActivity.PActivityDelegate
	c189 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PActivity.PActivityDelegate.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> &laquo;interface&raquo; </td></tr>
			<tr><td> PActivityDelegate </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + activityStarted() </td></tr>
			<tr><td align="left"> + activityStepped() </td></tr>
			<tr><td align="left"> + activityFinished() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//edu.umd.cs.piccolo.activities.PInterpolatingActivity extends edu.umd.cs.piccolo.activities.PActivity
	c188:p -> c182:p [dir=back,arrowtail=empty];
	//edu.umd.cs.piccolo.activities.PColorActivity extends edu.umd.cs.piccolo.activities.PInterpolatingActivity
	c182:p -> c183:p [dir=back,arrowtail=empty];
	//edu.umd.cs.piccolo.activities.PTransformActivity extends edu.umd.cs.piccolo.activities.PInterpolatingActivity
	c182:p -> c185:p [dir=back,arrowtail=empty];
	// edu.umd.cs.piccolo.activities.PColorActivity NAVASSOC edu.umd.cs.piccolo.activities.PColorActivity.Target
	c183:p -> c184:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// edu.umd.cs.piccolo.activities.PTransformActivity NAVASSOC edu.umd.cs.piccolo.activities.PTransformActivity.Target
	c185:p -> c186:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// edu.umd.cs.piccolo.activities.PActivity NAVASSOC edu.umd.cs.piccolo.activities.PActivityScheduler
	c188:p -> c187:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// edu.umd.cs.piccolo.activities.PActivity NAVASSOC edu.umd.cs.piccolo.activities.PActivity.PActivityDelegate
	c188:p -> c189:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

