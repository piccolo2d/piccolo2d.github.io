#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.6 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	// edu.umd.cs.piccolo.PCanvas
	c1091 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../PCanvas.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PCanvas </td></tr>
			<tr><td><font point-size="7.0"> edu.umd.cs.piccolo </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> # createDefaultCamera() </td></tr>
			<tr><td align="left"> + getPanEventHandler() </td></tr>
			<tr><td align="left"> + setPanEventHandler() </td></tr>
			<tr><td align="left"> + getZoomEventHandler() </td></tr>
			<tr><td align="left"> + setZoomEventHandler() </td></tr>
			<tr><td align="left"> + getCamera() </td></tr>
			<tr><td align="left"> + setCamera() </td></tr>
			<tr><td align="left"> + getRoot() </td></tr>
			<tr><td align="left"> + getLayer() </td></tr>
			<tr><td align="left"> + addInputEventListener() </td></tr>
			<tr><td align="left"> + removeInputEventListener() </td></tr>
			<tr><td align="left"> + getInteracting() </td></tr>
			<tr><td align="left"> + getAnimating() </td></tr>
			<tr><td align="left"> + setInteracting() </td></tr>
			<tr><td align="left"> + setDefaultRenderQuality() </td></tr>
			<tr><td align="left"> + setAnimatingRenderQuality() </td></tr>
			<tr><td align="left"> + setInteractingRenderQuality() </td></tr>
			<tr><td align="left"> + pushCursor() </td></tr>
			<tr><td align="left"> + popCursor() </td></tr>
			<tr><td align="left"> + setEnabled() </td></tr>
			<tr><td align="left"> # installInputSources() </td></tr>
			<tr><td align="left"> # removeInputSources() </td></tr>
			<tr><td align="left"> # sendInputEventToInputManager() </td></tr>
			<tr><td align="left"> + setBounds() </td></tr>
			<tr><td align="left"> + repaint() </td></tr>
			<tr><td align="left"> + paintComponent() </td></tr>
			<tr><td align="left"> + paintImmediately() </td></tr>
			<tr><td align="left"> + createTimer() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.event.PDragSequenceEventHandler
	c1092 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PDragSequenceEventHandler.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td><font face="Helvetica-Oblique"> PDragSequenceEventHandler </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + isDragging() </td></tr>
			<tr><td align="left"> + setIsDragging() </td></tr>
			<tr><td align="left"> + getMinDragStartDistance() </td></tr>
			<tr><td align="left"> + setMinDragStartDistance() </td></tr>
			<tr><td align="left"> + getMousePressedCanvasPoint() </td></tr>
			<tr><td align="left"> # startDrag() </td></tr>
			<tr><td align="left"> # drag() </td></tr>
			<tr><td align="left"> # endDrag() </td></tr>
			<tr><td align="left"> # shouldStartDragInteraction() </td></tr>
			<tr><td align="left"> # getDragActivity() </td></tr>
			<tr><td align="left"> # startDragActivity() </td></tr>
			<tr><td align="left"> # stopDragActivity() </td></tr>
			<tr><td align="left"> # dragActivityFirstStep() </td></tr>
			<tr><td align="left"> # dragActivityStep() </td></tr>
			<tr><td align="left"> # dragActivityFinalStep() </td></tr>
			<tr><td align="left"> + mousePressed() </td></tr>
			<tr><td align="left"> + mouseDragged() </td></tr>
			<tr><td align="left"> + mouseReleased() </td></tr>
			<tr><td align="left"> # paramString() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.event.PPanEventHandler
	c1094 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./PPanEventHandler.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PPanEventHandler </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> # drag() </td></tr>
			<tr><td align="left"> # pan() </td></tr>
			<tr><td align="left"> + setAutopan() </td></tr>
			<tr><td align="left"> + getAutopan() </td></tr>
			<tr><td align="left"> + setMinAutopanSpeed() </td></tr>
			<tr><td align="left"> + setMaxAutopanSpeed() </td></tr>
			<tr><td align="left"> # dragActivityStep() </td></tr>
			<tr><td align="left"> # validatePanningSpeed() </td></tr>
			<tr><td align="left"> # paramString() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//edu.umd.cs.piccolo.event.PPanEventHandler extends edu.umd.cs.piccolo.event.PDragSequenceEventHandler
	c1092:p -> c1094:p [dir=back,arrowtail=empty];
	// edu.umd.cs.piccolo.PCanvas NAVASSOC edu.umd.cs.piccolo.event.PPanEventHandler
	c1091:p -> c1094:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// edu.umd.cs.piccolo.PCanvas DEPEND edu.umd.cs.piccolo.event.PPanEventHandler
	c1091:p -> c1094:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
}

