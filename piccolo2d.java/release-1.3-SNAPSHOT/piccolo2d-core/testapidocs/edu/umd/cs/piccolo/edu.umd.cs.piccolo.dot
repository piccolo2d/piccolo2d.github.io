#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.6 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	// edu.umd.cs.piccolo.SerializationTest
	c45 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SerializationTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> SerializationTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + test() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.PCameraTest
	c46 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PCameraTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PCameraTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + testCopy() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.PerformanceLog
	c47 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PerformanceLog.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PerformanceLog </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + startTest() </td></tr>
			<tr><td align="left"> + endTest() </td></tr>
			<tr><td align="left"> + addEntry() </td></tr>
			<tr><td align="left"> + clear() </td></tr>
			<tr><td align="left"> + writeLog() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.PerformanceLog.ZLogEntry
	c48 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PerformanceLog.ZLogEntry.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> ZLogEntry </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.PNodeTest
	c49 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PNodeTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PNodeTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + setUp() </td></tr>
			<tr><td align="left"> + testCenterBaseBoundsOnPoint() </td></tr>
			<tr><td align="left"> + testClientProperties() </td></tr>
			<tr><td align="left"> + testFullScale() </td></tr>
			<tr><td align="left"> + testReparent() </td></tr>
			<tr><td align="left"> + testFindIntersectingNodes() </td></tr>
			<tr><td align="left"> + testRemoveNonexistantListener() </td></tr>
			<tr><td align="left"> + testAddChild() </td></tr>
			<tr><td align="left"> + testCopy() </td></tr>
			<tr><td align="left"> + testLocalToGlobal() </td></tr>
			<tr><td align="left"> + testToString() </td></tr>
			<tr><td align="left"> + testRecursiveLayout() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// edu.umd.cs.piccolo.PerformanceTests
	c50 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PerformanceTests.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PerformanceTests </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + testRunPerformanceTests() </td></tr>
			<tr><td align="left"> + createNodes() </td></tr>
			<tr><td align="left"> + createPaths() </td></tr>
			<tr><td align="left"> + addNodes() </td></tr>
			<tr><td align="left"> + removeNodes() </td></tr>
			<tr><td align="left"> + translateNodes() </td></tr>
			<tr><td align="left"> + fullIntersectsNodes() </td></tr>
			<tr><td align="left"> + memorySizeOfNodes() </td></tr>
			<tr><td align="left"> + copyNodes() </td></tr>
			<tr><td align="left"> + costOfNoBoundsCache() </td></tr>
			<tr><td align="left"> + renderSpeed() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
}

