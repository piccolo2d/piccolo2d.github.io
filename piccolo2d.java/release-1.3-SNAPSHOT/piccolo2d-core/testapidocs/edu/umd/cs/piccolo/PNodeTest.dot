#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.6 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	// edu.umd.cs.piccolo.PNodeTest
	c231 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./PNodeTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> PNodeTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + setUp() </td></tr>
			<tr><td align="left"> + testCenterBaseBoundsOnPoint() </td></tr>
			<tr><td align="left"> + testClientProperties() </td></tr>
			<tr><td align="left"> + testFullScale() </td></tr>
			<tr><td align="left"> + testReparent() </td></tr>
			<tr><td align="left"> + testFindIntersectingNodes() </td></tr>
			<tr><td align="left"> + testRemoveNonexistantListener() </td></tr>
			<tr><td align="left"> + testAddChild() </td></tr>
			<tr><td align="left"> + testCopy() </td></tr>
			<tr><td align="left"> + testLocalToGlobal() </td></tr>
			<tr><td align="left"> + testToString() </td></tr>
			<tr><td align="left"> + testRecursiveLayout() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	//edu.umd.cs.piccolo.PNodeTest extends junit.framework.TestCase
	c234:p -> c231:p [dir=back,arrowtail=empty];
	// junit.framework.TestCase
	c234 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td><font face="Helvetica-Oblique"> TestCase </font></td></tr>
			<tr><td><font point-size="7.0"> junit.framework </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + countTestCases() </td></tr>
			<tr><td align="left"> # createResult() </td></tr>
			<tr><td align="left"> + run() </td></tr>
			<tr><td align="left"> + run() </td></tr>
			<tr><td align="left"> + runBare() </td></tr>
			<tr><td align="left"> # runTest() </td></tr>
			<tr><td align="left"> # setUp() </td></tr>
			<tr><td align="left"> # tearDown() </td></tr>
			<tr><td align="left"> + toString() </td></tr>
			<tr><td align="left"> + getName() </td></tr>
			<tr><td align="left"> + setName() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
}

